{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set customClass = widget.settings.customClass.mobile %}
{% set appearance = widget.settings.appearance.mobile %}
{% set spacingSettings = widget.settings.spacing %}
{% set inlineMargin    = WidgetHelper.getInlineSpacings(spacingSettings, "", spacingSettings.customMargin.mobile) %}
{% set spacingMargin   = WidgetHelper.getSpacingClasses(spacingSettings, "",spacingSettings.customMargin.mobile) %}

{{ Twig.set("enabledRoutes", Twig.call("config", ["IO.routing.enabled_routes"]) ~ " | split(\", \")") }}

{{ Twig.if("('confirmation' in enabledRoutes or 'all' in enabledRoutes) and (data.order is defined and data.order is not null)") }}
    <div class="widget widget-feedback-orderconfirmation widget-{{ appearance | default("primary") }} {% if customClass | length > 0 %} {{ customClass }}{% endif %} {% if spacingMargin | length > 0 %} {{ spacingMargin }}{% endif %}"
            {% if inlineMargin | length > 0 %} style="{{ inlineMargin }}"{% endif %}>
            <feedback-order-container
                :variations="{{ Twig.print("data.variations | json_encode") }}"
                :items="{{ Twig.print("data.order.orderItems | json_encode") }}"
                :item-urls="{{ Twig.print("data.itemURLs | json_encode") }}"
                :item-images="{{ Twig.print("data.itemImages | json_encode") }}"
                :options="{{ options | json_encode}}">
            </feedback-order-container>
    </div>

{{ Twig.elseif("#{ isPreview | json_encode }") }}

<div class="widget-placeholder">
    <div>
        <p class="title">{{ Twig.trans("Feedback::Widget.feedbackLabel") }}</p>
        <p class="description">{{ Twig.trans("Feedback::Widget.feedbackOrderitemPlaceholderDescription") }}</p>
    </div>
</div>

{{ Twig.endif() }}
