{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set customClass = widget.settings.customClass.mobile %}
{% set appearance = widget.settings.appearance.mobile %}

{% set spacingSettings = widget.settings.spacing %}
{% set inlinePadding   = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set inlineMargin    = WidgetHelper.getInlineSpacings(spacingSettings, "", spacingSettings.customMargin.mobile) %}
{% set spacingPadding  = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set spacingMargin   = WidgetHelper.getSpacingClasses(spacingSettings, "",spacingSettings.customMargin.mobile) %}

{{ Twig.set("configOptions", Twig.call("feedbackServices.feedback.getFrontendOptions") ) }}
{{ Twig.set("options", options | json_encode) }}
{{ Twig.set("options", "options | merge(configOptions)") }}

<div data-feedback class="widget widget-feedback widget-{{ appearance | default("primary") }} {% if customClass | length > 0 %} {{ customClass }}{% endif %} {% if spacingMargin | length > 0 %} {{ spacingMargin }}{% endif %}"
        {% if inlineMargin | length > 0 %} style="{{ inlineMargin }}"{% endif %}>
    <feedback-container class="widget-inner"
            :optionss="{{ Twig.print('options | json_encode') }}"
            classes="{{ spacingPadding }}"
            styles="{{ inlinePadding }}">
    </feedback-container>
</div>
